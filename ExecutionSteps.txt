Set the commandLineArguments
-----------------------------
 
This has to be set in org.com.schedulemanagement.mmScheduler--> CommandLines.java --> Run as --> RunConfiguration-->  Arguments

CommandLineArguments       Value                        Use
   -dbc                    Yes/No              To clear Core/Schedule DB

   -mat                    String             eg:If we give A, Asset/Items MaterialID would be "MAT-A-1" in Core & Schedule
  
   -time                  current/past         To set timeRequired property in Items

   -item                   IntegerValue        To set No.of Items in a Schedule
  
   -schStart
   -schEnd                  IntegerValue        eg: If schStart=1 & schEnd=10, 10Schedules will be created


  Sample:
  -------
  -dbc Yes -mat B -time current -schStart 1 -schEnd 300 -item 300
  
  Run the class---> CommandLines.java

  For this CommandLineArguments,

      1.DB will be cleared in both Core and Schedule before creating new Date

      2.10000(Hardcoded) Assets/Assetfiles(mxf_.123)/FileLocations will be created in Core with 
        MaterialId as MAT-B-1 to MAT-B-10000
       
       For---> MAT-B-1      to MAT-B-5000   -- BroadcastStatus: Ready for Tx
               MAT-B-5001   to MAT-B-10000  -- BroadcastStatus: Not Ready for Tx

      3. Current Timestamp value would be set in TimeRequired Property in Schedules

      4. 300 Schedules will be Created with 300 Items/Schedule in ScheduleDB
     
      5. 90000 Items will be Created with MaterialId as MAT-B-1 to MAT-B-900000
                     

  
    Core and Schedule Data will be Created with above mentioned Data

Class Used:
-----------
(org.com.schedulemanagement.mmScheduler)
CommandLines.java        -- To be Executed
CoreAPIData.java         -- To create Core Data
ScheduleDate.java        -- To create Schedule Date
CommandLineParamter.java -- Contains CommandLine Arguments
DateConfiguration.jav    -- Contains method to get current timestamp

(org.ericsson.nucleus.test.mmschedule.models)
Schedule.java            -- Pojo class for first-level schedule Properties
item.java                -- Pojo class for Item-level schedule Properties

TestClass:
---------
TestExecute.java
PostSchedule.java
PostScheduleStatic.java


C